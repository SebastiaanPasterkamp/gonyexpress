---
kind: pipeline
type: kubernetes
name: Test

platform:
  os: linux
  arch: arm

steps:
  - name: unit test
    image: golang:1.18-stretch
    commands:
      - apt-get update
      - apt-get install -y git build-essential
      - go test -coverprofile cover.out ./...
    resources:
      requests:
        cpu: 1000
        memory: 200MiB

  - name: coverage
    image: golang:1.18-stretch
    commands:
      - go tool cover -func cover.out
    depends_on:
      - unit test

---
kind: pipeline
type: kubernetes
name: Image Staging

depends_on:
- Test

platform:
  os: linux
  arch: arm

steps:
  - name: build consumer staging
    image: docker-registry.pikube.dev:31443/drone-genuinetools-img
    settings:
      registry: docker-registry-service.docker-registry:5000
      repo: gonyexpress-consumer
      build_args: TARGET=consumer
      tags: ${DRONE_BRANCH},unstable
      insecure_registry: true
    resources:
      requests:
        cpu: 1000
        memory: 300MiB

  - name: build producer staging
    image: docker-registry.pikube.dev:31443/drone-genuinetools-img
    settings:
      registry: docker-registry-service.docker-registry:5000
      repo: gonyexpress-producer
      build_args: TARGET=producer
      tags: ${DRONE_BRANCH},unstable
      insecure_registry: true
    resources:
      requests:
        cpu: 1000
        memory: 300MiB

---
kind: pipeline
type: kubernetes
name: Image Production

trigger:
  event:
    - tag

depends_on:
- Image Staging

platform:
  os: linux
  arch: arm

steps:
  - name: build consumer production
    image: docker-registry.pikube.dev:31443/drone-genuinetools-img
    settings:
      registry: docker-registry-service.docker-registry:5000
      repo: gonyexpress-consumer
      build_args: TARGET=consumer
      auto_tag: true
      insecure_registry: true
    resources:
      requests:
        cpu: 1000
        memory: 300MiB

  - name: build producer production
    image: docker-registry.pikube.dev:31443/drone-genuinetools-img
    settings:
      registry: docker-registry-service.docker-registry:5000
      repo: gonyexpress-consumer
      build_args: TARGET=producer
      auto_tag: true
      insecure_registry: true
    resources:
      requests:
        cpu: 1000
        memory: 300MiB

---
kind: pipeline
type: kubernetes
name: Notify Status

clone:
  disable: true

trigger:
  status:
  - success
  - failure

depends_on:
- Image Staging
- Image Production

platform:
  os: linux
  arch: arm

steps:
  - name: discord notification
    image: appleboy/drone-discord
    settings:
      webhook_id:
        from_secret: discord_id
      webhook_token:
        from_secret: discord_token
      username: drone.io
      color: auto
      message: >
        <:gonyexpress:855198986686955581> **{{repo.name}}**

        {{#success build.status}}
        :white_check_mark: {{build.event}} build {{build.number}} succeeded. Good job.
        {{else}}
        :warning: {{build.event}} build {{build.number}} failed. Fix me please.
        {{/success}}

        {{build.link}}

        **Branch:** {{commit.branch}} {{commit.tag}}

        **Message:** {{commit.message}}

---
kind: signature
hmac: b4647782a99bd3b00496e9d2039fb1be96457972d6dc9c8cbe1b8c5ffe089b26

...
